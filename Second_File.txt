adding 2nd file
in case of error:
Erum@DESKTOP-9RBOJT6 MINGW64 /GitWorkSpaceRepository (master)
$ git --help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout    Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

Erum@DESKTOP-9RBOJT6 MINGW64 /GitWorkSpaceRepository (master)
$ git log       // checking
commit 9c91b3412fd087c8f5ba3640d134c4b7b29ce2c0 (HEAD -> master)
Author: MyProgrammingHub123 <erumamjad@hotmail.com>
Date:   Sun Jan 13 16:44:08 2019 -0500

    uodated third time

commit 056158582ea7acf297a4b943a570ff6c6bcddd63
Author: MyProgrammingHub123 <erumamjad@hotmail.com>
Date:   Sun Jan 13 16:41:09 2019 -0500

    Updated txt file and added to github

commit 375b7380b80a5f2bbbd60064b37fdde22c454d61
Author: MyProgrammingHub123 <erumamjad@hotmail.com>
Date:   Sun Jan 13 16:31:35 2019 -0500

    adding first text file

commit 1df48a034941980c3d73b77dfe5eac1ab6d9a813 (origin/master)
Author: MyProgrammingHub123 <46234521+MyProgrammingHub123@users.noreply.github.com>
Date:   Sun Jan 13 15:59:57 2019 -0500

    Create README.md

